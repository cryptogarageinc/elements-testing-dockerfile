name: Push Docker Image

on: 
  push:
    tags:
    - 'v*'
    - 'bitcoin-*'

env:
  DOCKER_BASE_NAME: ghcr.io/${{ github.repository_owner }}/elements-testing
  REPOSITORY_PATH: ${{ github.repository }}

jobs:
  upload-image:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        baseimage: ['python:3.9.7-slim-buster']

    steps:
    - uses: actions/checkout@v2
    - name: Get tag version
      id: get_version
      run: |
        echo ::set-output name=PKG_TAG::${DOCKER_BASE_NAME}:${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=REP_USER_NAME::${REPOSITORY_PATH/\/elements-testing-dockerfile//}

    - name: Build docker image
      env:
        PKG_TAG: ${{steps.get_version.outputs.PKG_TAG}}
      run: |
        docker build . -t "${PKG_TAG}" --build-arg BASE_IMAGE="${{ matrix.baseimage }}"

#       docker run --rm ${PKG_TAG} --version

#    - name: Scan docker image
#      env:
#        PKG_TAG: ${{steps.get_version.outputs.PKG_TAG}}
#      run: |
#        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
#          -v ${HOME}/.cache:/root/.cache aquasec/trivy:latest --exit-code 1 ${PKG_TAG}

    - name: Push to Packages
      env:
        CR_TOKEN: ${{ secrets.CR_PAT }}
        PKG_TAG: ${{steps.get_version.outputs.PKG_TAG}}
        REP_USER_NAME: ${{ secrets.CR_USER_NAME }}
      run: |
        echo "$CR_TOKEN" | docker login ghcr.io -u "$REP_USER_NAME" --password-stdin
        docker push "${PKG_TAG}"
